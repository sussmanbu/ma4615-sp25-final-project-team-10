{
  "hash": "101f2addbc42b9733f2cf0aa890b269f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Blog Post 8\"\ndescription: \"Interactive exploration of Cook County exonerations and crime data\"\nauthor: \"Team 10 (Mango)\"\ndate: \"2025-03-24\"\nformat: html\neditor: visual\nexecute:\n  echo: true\n  message: false\n  warning: false\nruntime: shiny\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(shiny)\nlibrary(tidyverse)\nlibrary(here)\n\n# Load filtered data\nexoneration_data <- read_rds(here(\"dataset\", \"exoneration_data_cook.rds\"))\ncrime_data <- read_rds(here(\"dataset-ignore\", \"crime_data_2010.rds\"))\n```\n:::\n\n::: {.cell context='server'}\n\n```{.r .cell-code}\n# Define UI layout\nui <- fluidPage(\n  titlePanel(\"Cook County Crimes and Exonerations\"),\n\n  sidebarLayout(\n    sidebarPanel(\n      selectInput(\"crime_type\", \"Choose a Crime Type:\", \n                  choices = unique(crime_data$`Primary Type`),\n                  selected = \"THEFT\"),\n      sliderInput(\"year_range\", \"Select Year Range:\",\n                  min = min(crime_data$Year), \n                  max = max(crime_data$Year),\n                  value = c(2015, 2023),\n                  sep = \"\")\n    ),\n\n    mainPanel(\n      tabsetPanel(\n        tabPanel(\"Crime Trend\", plotOutput(\"crimePlot\")),\n        tabPanel(\"Exoneration Table\", tableOutput(\"exonTable\"))\n      )\n    )\n  )\n)\n```\n:::\n\n::: {.cell context='server'}\n\n```{.r .cell-code}\nserver <- function(input, output) {\n\n  # Plot rendering logic\n  output$crimePlot <- renderPlot({\n    crime_data %>%\n      filter(`Primary Type` == input$crime_type,\n             Year >= input$year_range[1],\n             Year <= input$year_range[2]) %>%\n      ggplot(aes(x = Year)) +\n      geom_bar(fill = \"steelblue\") +\n      labs(title = paste(\"Number of\", input$crime_type, \"Cases by Year\"),\n           x = \"Year\",\n           y = \"Number of Cases\")\n  })\n\n  # Exoneration data table\n  output$exonTable <- renderTable({\n    exoneration_data\n  })\n}\n```\n:::\n\n::: {.cell context='server'}\n\n```{.r .cell-code}\nshinyApp(ui = ui, server = server)\n```\n\n::: {.cell-output-display}\n`<iframe data-deferred-src=\"app47b064ade77114ea0a378f53906a766b/?w=&amp;__subapp__=1\" width=\"100%\" height=\"400\" class=\"shiny-frame shiny-frame-deferred\"></iframe>`{=html}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load libraries and cleaned data\nlibrary(tidyverse)\nlibrary(here)\n\nexon <- read_rds(here(\"dataset\", \"exoneration_data_cook.rds\"))\ncrime <- read_rds(here(\"dataset-ignore\", \"crime_data_2010.rds\"))\n\n# 1. Prepare exoneration trends by year\nexon_trends <- exon %>%\n  mutate(Exonerated = as.integer(Exonerated)) %>%\n  filter(!is.na(Exonerated)) %>%\n  count(Year = Exonerated) %>%\n  mutate(Data = \"Exonerations\")\n\n# 2. Map crime types to broader categories\nviolent_types <- c(\n  \"HOMICIDE\", \"CRIM SEXUAL ASSAULT\", \"SEX OFFENSE\", \"OFFENSE INVOLVING CHILDREN\",\n  \"ASSAULT\", \"ROBBERY\"\n)\n\ncrime_cat <- crime %>%\n  mutate(Category = if_else(`Primary Type` %in% violent_types, \"Violent\", \"Nonviolent\"))\n\n# 3. Summarize crime trends by year\ncrime_trends <- crime_cat %>%\n  count(Year, Category) %>%\n  # total crimes per year for comparison\n  group_by(Year) %>%\n  summarize(Count = sum(n), .groups = \"drop\") %>%\n  mutate(Data = \"Crimes\")\n\n# 4. Combine both trends into one dataset\ncombined_trends <- bind_rows(\n  exon_trends %>% rename(Count = n),\n  crime_trends\n)\n\n# 5. Plot both on the same chart\nggplot(combined_trends, aes(x = Year, y = Count, color = Data)) +\n  geom_line(size = 1) +\n  geom_point(size = 2) +\n  labs(\n    title = \"Cook County: Crimes vs Exonerations Over Time\",\n    x = \"Year\",\n    y = \"Count\",\n    color = \"Data Type\"\n  ) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](BlogPost8_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "BlogPost8_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}